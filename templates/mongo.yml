# PersistentVolume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
  namespace: {{ .Values.namespace }}
spec:
  capacity:
    storage: {{ .Values.mongodb.storageSize }}
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: {{ .Values.mongodb.storageClass }}
  hostPath:
    path: /data/db2

---

# PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.mongodb.storageSize }}
  storageClassName: {{ .Values.mongodb.storageClass }}

---

# MongoDB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mongodb.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.mongodb.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.mongodb.name }}
    spec:
      containers:
        - name: {{ .Values.mongodb.name }}
          image: {{ .Values.mongodb.image }}
          ports:
            - containerPort: {{ .Values.mongodb.containerPort }}
          volumeMounts:
            - mountPath: /data/db
              name: mongodb-storage
      volumes:
        - name: mongodb-storage
          persistentVolumeClaim:
            claimName: mongodb-pvc

---

# MongoDB Service 
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.mongodb.name }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.mongodb.name }}
  type: {{ .Values.service.type }}
  ports:
    - protocol: TCP
      port: {{ .Values.mongodb.containerPort }}
      targetPort: {{ .Values.mongodb.containerPort }}
